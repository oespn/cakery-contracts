/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type {
  Cakery_Rep_Orgs,
  Cakery_Rep_OrgsInterface,
} from "../Cakery_Rep_Orgs";
import type { PromiseOrValue } from "../common";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "ref",
        type: "string",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "memberKey",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "members",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "voteForRequired",
        type: "uint16",
      },
    ],
    name: "LogNewOrg",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
    ],
    name: "LogRemOrg",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "ref",
        type: "string",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "memberKey",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "members",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "membersApproved",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "proposals",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "voteForRequired",
        type: "uint16",
      },
    ],
    name: "LogUpdateOrg",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
    ],
    name: "_getOrg",
    outputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "ref",
        type: "string",
      },
      {
        internalType: "bytes32",
        name: "memberKey",
        type: "bytes32",
      },
      {
        internalType: "uint16",
        name: "nMembers",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "voteForRequired",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "orgKey",
        type: "bytes32",
      },
    ],
    name: "getOrgApprovedMembers",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "array",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "orgKey",
        type: "bytes32",
      },
    ],
    name: "getOrgMembers",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "array",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "orgKey",
        type: "bytes32",
      },
    ],
    name: "getOrgProposals",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "array",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "orgKey",
        type: "bytes32",
      },
    ],
    name: "getVotesRequired",
    outputs: [
      {
        internalType: "uint16",
        name: "votesRequired",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "orgKey",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "memberKey",
        type: "bytes32",
      },
    ],
    name: "memberAdd",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "orgKey",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "memberKey",
        type: "bytes32",
      },
    ],
    name: "memberApproved",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "orgKey",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "memberKey",
        type: "bytes32",
      },
    ],
    name: "memberApprovedExists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "orgKey",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "memberKey",
        type: "bytes32",
      },
    ],
    name: "memberExists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "ref",
        type: "string",
      },
      {
        internalType: "bytes32",
        name: "memberKey",
        type: "bytes32",
      },
    ],
    name: "newOrg",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "orgKey",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "proposalKey",
        type: "bytes32",
      },
    ],
    name: "proposalAdd",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "orgKey",
        type: "bytes32",
      },
      {
        internalType: "uint16",
        name: "votesRequired",
        type: "uint16",
      },
    ],
    name: "setVotesRequired",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "ref",
        type: "string",
      },
      {
        internalType: "bytes32",
        name: "memberKey",
        type: "bytes32",
      },
      {
        internalType: "uint16",
        name: "nMembers",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "voteForRequired",
        type: "uint16",
      },
    ],
    name: "updateOrg",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506115ec806100206000396000f3fe608060405234801561001057600080fd5b50600436106100df5760003560e01c80639889f0141161008c578063d91ecd8011610066578063d91ecd80146101d5578063ea128891146101f9578063f11369481461020c578063fd81ded21461021f57600080fd5b80639889f0141461019c578063a642d151146101af578063cf71e224146101c257600080fd5b8063699e6618116100bd578063699e6618146101345780636e6fcabf146101695780638a6119121461018957600080fd5b80631cafc709146100e4578063222831841461010c5780635c90bc5614610121575b600080fd5b6100f76100f236600461103b565b610259565b60405190151581526020015b60405180910390f35b61011f61011a366004611100565b6102de565b005b61011f61012f36600461103b565b61041b565b61011f61014236600461118c565b600091825260026020526040909120600301805461ffff191661ffff909216919091179055565b61017c6101773660046111b8565b610595565b60405161010391906111d1565b6100f761019736600461103b565b610663565b61011f6101aa36600461103b565b6106e0565b61017c6101bd3660046111b8565b610845565b61011f6101d036600461103b565b610911565b6101e86101e33660046111b8565b610a5f565b604051610103959493929190611262565b61017c6102073660046111b8565b610c26565b61011f61021a3660046112aa565b610cf2565b61024661022d3660046111b8565b60009081526002602052604090206003015461ffff1690565b60405161ffff9091168152602001610103565b60006102658184610e28565b6102b65760405162461bcd60e51b815260206004820152601f60248201527f43616e27742066696e64204f726720746f20636865636b204d656d6265722e0060448201526064015b60405180910390fd5b50600082815260026020908152604080832084845260040190915290205460ff165b92915050565b6102e9600085610e78565b60008481526002602090815260409091208451909161030c918391870190610fa2565b5082516103229060018301906020860190610fa2565b5060028101829055600381018054600683018054600161ffff19909116811790915560098401805463ffffffff19908116909155909116620100011782556005830180548083018255600091825260208083209091018690558582526004850181526040808320805460ff19908116861790915560088701805480870182559085528385200188905587845260078701909252918290208054909116909217909155905490517f65a3890cb89f183e84abf5e6910b7a05d9b149e8a0333adf9a242dbecfaf02739161040c913391899189918991899161ffff620100008204811692911690611341565b60405180910390a15050505050565b610426600083610e28565b6104825760405162461bcd60e51b815260206004820152602760248201527f43616e27742061646420746f20616e204f7267207468617420646f65736e27746044820152661032bc34b9ba1760c91b60648201526084016102ad565b600082815260026020908152604080832084845260048101909252822054909160ff909116151590036105225760038101546104c99062010000900461ffff1660016113c3565b60038201805461ffff92909216620100000263ffff0000199092169190911790556005810180546001818101835560009283526020808420909201859055848352600484019091526040909120805460ff191690911790555b6003810154600682015460098301546040517fce8e2620d8a370fb7594c8b89319394fe398efb67829b2afe458508aadee9dd7936105889333938993889360018501938b9361ffff6201000084048116949281169363ffffffff909216929116906114c2565b60405180910390a1505050565b60606105a2600083610e28565b6105fa5760405162461bcd60e51b8152602060048201526024808201527f43616e27742067657420616e204f7267207468617420646f65736e277420657860448201526334b9ba1760e11b60648201526084016102ad565b60008281526002602090815260409182902060088101805484518185028101850190955280855291939290919083018282801561065657602002820191906000526020600020905b815481526020019060010190808311610642575b5050505050915050919050565b600061066f8184610e28565b6106bb5760405162461bcd60e51b815260206004820152601f60248201527f43616e27742066696e64204f726720746f20636865636b204d656d6265722e0060448201526064016102ad565b5060009182526002602090815260408084209284526007909201905290205460ff1690565b6106eb600083610e28565b6107475760405162461bcd60e51b815260206004820152602760248201527f43616e27742061646420746f20616e204f7267207468617420646f65736e27746044820152661032bc34b9ba1760c91b60648201526084016102ad565b6000828152600260209081526040808320848452600a8101909252822054909160ff909116151590036107de57600981015461078a9063ffffffff166001611549565b60098201805463ffffffff191663ffffffff92909216919091179055600b810180546001818101835560009283526020808420909201859055848352600a84019091526040909120805460ff191690911790555b60028101546003820154600683015460098401546040517fce8e2620d8a370fb7594c8b89319394fe398efb67829b2afe458508aadee9dd7946105889433948a94899460018601949361ffff62010000820481169481169363ffffffff16929116906114c2565b6060610852600083610e28565b6108aa5760405162461bcd60e51b8152602060048201526024808201527f43616e27742067657420616e204f7267207468617420646f65736e277420657860448201526334b9ba1760e11b60648201526084016102ad565b600082815260026020908152604091829020600b810180548451818502810185019095528085529193929091908301828280156106565760200282019190600052602060002090815481526020019060010190808311610642575050505050915050919050565b61091c600083610e28565b6109785760405162461bcd60e51b815260206004820152602760248201527f43616e27742061646420746f20616e204f7267207468617420646f65736e27746044820152661032bc34b9ba1760c91b60648201526084016102ad565b600082815260026020908152604080832084845260078101909252822054909160ff909116151590036105225760068101546109b99061ffff1660016113c3565b60068201805461ffff191661ffff928316178155600883018054600181810183556000928352602080842090920187905586835260078601909152604091829020805460ff19168217905560038501549254600986015492517fce8e2620d8a370fb7594c8b89319394fe398efb67829b2afe458508aadee9dd7956105889533958b958a95908601948c946201000085048116949281169363ffffffff169216906114c2565b60608060008080610a708187610e28565b610ac85760405162461bcd60e51b8152602060048201526024808201527f43616e27742067657420616e204f7267207468617420646f65736e277420657860448201526334b9ba1760e11b60648201526084016102ad565b6000868152600260208190526040909120908101546003820154825483926001840192909161ffff62010000830481169216908590610b06906113e9565b80601f0160208091040260200160405190810160405280929190818152602001828054610b32906113e9565b8015610b7f5780601f10610b5457610100808354040283529160200191610b7f565b820191906000526020600020905b815481529060010190602001808311610b6257829003601f168201915b50505050509450838054610b92906113e9565b80601f0160208091040260200160405190810160405280929190818152602001828054610bbe906113e9565b8015610c0b5780601f10610be057610100808354040283529160200191610c0b565b820191906000526020600020905b815481529060010190602001808311610bee57829003601f168201915b50505050509350955095509550955095505091939590929450565b6060610c33600083610e28565b610c8b5760405162461bcd60e51b8152602060048201526024808201527f43616e27742067657420616e204f7267207468617420646f65736e277420657860448201526334b9ba1760e11b60648201526084016102ad565b6000828152600260209081526040918290206005810180548451818502810185019095528085529193929091908301828280156106565760200282019190600052602060002090815481526020019060010190808311610642575050505050915050919050565b610cfd600087610e28565b610d595760405162461bcd60e51b815260206004820152602760248201527f43616e27742075706461746520616e204f7267207468617420646f65736e27746044820152661032bc34b9ba1760c91b60648201526084016102ad565b600086815260026020908152604090912086519091610d7c918391890190610fa2565b508451610d929060018301906020880190610fa2565b506002810184905560038101805463ffffffff19166201000061ffff8681169190910261ffff19169190911784821617909155600682015460098301546040517fce8e2620d8a370fb7594c8b89319394fe398efb67829b2afe458508aadee9dd793610e179333938d938d938d938d938d93919092169163ffffffff16908c90611568565b60405180910390a150505050505050565b60018201546000908103610e3e575060006102d8565b6000828152602084905260409020546001840180548492908110610e6457610e646115b2565b906000526020600020015414905092915050565b6000819003610eef5760405162461bcd60e51b815260206004820152602860248201527f556e6f7264657265644b65795365742831303029202d204b65792063616e6e6f60448201527f742062652030783000000000000000000000000000000000000000000000000060648201526084016102ad565b610ef98282610e28565b15610f6c5760405162461bcd60e51b815260206004820152603560248201527f556e6f7264657265644b65795365742831303129202d204b657920616c72656160448201527f64792065786973747320696e20746865207365742e000000000000000000000060648201526084016102ad565b6001808301805480830182556000828152602090200183905554610f9091906115c8565b60009182526020929092526040902055565b828054610fae906113e9565b90600052602060002090601f016020900481019282610fd05760008555611016565b82601f10610fe957805160ff1916838001178555611016565b82800160010185558215611016579182015b82811115611016578251825591602001919060010190610ffb565b50611022929150611026565b5090565b5b808211156110225760008155600101611027565b6000806040838503121561104e57600080fd5b50508035926020909101359150565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261108457600080fd5b813567ffffffffffffffff8082111561109f5761109f61105d565b604051601f8301601f19908116603f011681019082821181831017156110c7576110c761105d565b816040528381528660208588010111156110e057600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806000806080858703121561111657600080fd5b84359350602085013567ffffffffffffffff8082111561113557600080fd5b61114188838901611073565b9450604087013591508082111561115757600080fd5b5061116487828801611073565b949793965093946060013593505050565b803561ffff8116811461118757600080fd5b919050565b6000806040838503121561119f57600080fd5b823591506111af60208401611175565b90509250929050565b6000602082840312156111ca57600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b81811015611209578351835292840192918401916001016111ed565b50909695505050505050565b6000815180845260005b8181101561123b5760208185018101518683018201520161121f565b8181111561124d576000602083870101525b50601f01601f19169290920160200192915050565b60a08152600061127560a0830188611215565b82810360208401526112878188611215565b6040840196909652505061ffff9283166060820152911660809091015292915050565b60008060008060008060c087890312156112c357600080fd5b86359550602087013567ffffffffffffffff808211156112e257600080fd5b6112ee8a838b01611073565b9650604089013591508082111561130457600080fd5b5061131189828a01611073565b9450506060870135925061132760808801611175565b915061133560a08801611175565b90509295509295509295565b73ffffffffffffffffffffffffffffffffffffffff8816815286602082015260e06040820152600061137660e0830188611215565b82810360608401526113888188611215565b6080840196909652505061ffff92831660a0820152911660c090910152949350505050565b634e487b7160e01b600052601160045260246000fd5b600061ffff8083168185168083038211156113e0576113e06113ad565b01949350505050565b600181811c908216806113fd57607f821691505b60208210810361141d57634e487b7160e01b600052602260045260246000fd5b50919050565b8054600090600181811c908083168061143d57607f831692505b6020808410820361145e57634e487b7160e01b600052602260045260246000fd5b83885260208801828015611479576001811461148a576114b5565b60ff198716825282820197506114b5565b60008981526020902060005b878110156114af57815484820152908601908401611496565b83019850505b5050505050505092915050565b600061012073ffffffffffffffffffffffffffffffffffffffff8c1683528a60208401528060408401526114f88184018b611423565b9050828103606084015261150c818a611423565b6080840198909852505061ffff94851660a082015292841660c084015263ffffffff9190911660e083015290911661010090910152949350505050565b600063ffffffff8083168185168083038211156113e0576113e06113ad565b600061012073ffffffffffffffffffffffffffffffffffffffff8c1683528a602084015280604084015261159e8184018b611215565b9050828103606084015261150c818a611215565b634e487b7160e01b600052603260045260246000fd5b6000828210156115da576115da6113ad565b50039056fea164736f6c634300080d000a";

type Cakery_Rep_OrgsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: Cakery_Rep_OrgsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Cakery_Rep_Orgs__factory extends ContractFactory {
  constructor(...args: Cakery_Rep_OrgsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Cakery_Rep_Orgs> {
    return super.deploy(overrides || {}) as Promise<Cakery_Rep_Orgs>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Cakery_Rep_Orgs {
    return super.attach(address) as Cakery_Rep_Orgs;
  }
  override connect(signer: Signer): Cakery_Rep_Orgs__factory {
    return super.connect(signer) as Cakery_Rep_Orgs__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): Cakery_Rep_OrgsInterface {
    return new utils.Interface(_abi) as Cakery_Rep_OrgsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Cakery_Rep_Orgs {
    return new Contract(address, _abi, signerOrProvider) as Cakery_Rep_Orgs;
  }
}
