/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type {
  Cakery_Rep_Proposals,
  Cakery_Rep_ProposalsInterface,
} from "../Cakery_Rep_Proposals";
import type { PromiseOrValue } from "../common";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "uuid",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "doc_cid",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "ref_id",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "total",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "nVotes",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "nVotesFor",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "nVotesRequired",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "enum Cakery_Entities.ProposalType",
        name: "proposalType",
        type: "uint8",
      },
    ],
    name: "LogNewProposal",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
    ],
    name: "LogRemProposal",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "uuid",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "doc_cid",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "ref_id",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "total",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "nVotes",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "nVotesFor",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "nVotesRequired",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "enum Cakery_Entities.ProposalType",
        name: "proposalType",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "enum Cakery_Entities.DecisionStatus",
        name: "decisionStatus",
        type: "uint8",
      },
    ],
    name: "LogUpdateProposal",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
    ],
    name: "_getProposal",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "proposalKey",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "orgKey",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "memberKey",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "uuid",
            type: "string",
          },
          {
            internalType: "string",
            name: "doc_cid",
            type: "string",
          },
          {
            internalType: "string",
            name: "ref_id",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "total",
            type: "uint256",
          },
          {
            internalType: "uint16",
            name: "nVotes",
            type: "uint16",
          },
          {
            internalType: "enum Cakery_Entities.ProposalType",
            name: "proposalType",
            type: "uint8",
          },
          {
            internalType: "enum Cakery_Entities.DecisionStatus",
            name: "decision",
            type: "uint8",
          },
        ],
        internalType: "struct Cakery_Entities.ProposalReturn",
        name: "r",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
    ],
    name: "existsProposal",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "proposalKey",
        type: "bytes32",
      },
    ],
    name: "getProposalVotes",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "array",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "proposalKey",
        type: "bytes32",
      },
    ],
    name: "getVotesCount",
    outputs: [
      {
        internalType: "uint16",
        name: "votes",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "votesFor",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "votesRequired",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "orgKey",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "memberKey",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "uuid",
        type: "string",
      },
      {
        internalType: "string",
        name: "doc_cid",
        type: "string",
      },
      {
        internalType: "string",
        name: "ref_id",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "total",
        type: "uint256",
      },
      {
        internalType: "uint16",
        name: "votesRequired",
        type: "uint16",
      },
      {
        internalType: "enum Cakery_Entities.ProposalType",
        name: "proposalType",
        type: "uint8",
      },
    ],
    name: "newProposal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "voteKey",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "proposalKey",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "memberKey",
        type: "bytes32",
      },
      {
        internalType: "bool",
        name: "voteFor",
        type: "bool",
      },
    ],
    name: "voteAdd",
    outputs: [
      {
        internalType: "enum Cakery_Entities.ProposalType",
        name: "action",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611428806100206000396000f3fe608060405234801561001057600080fd5b50600436106100725760003560e01c80637ac6d9b1116100505780637ac6d9b1146100d5578063a7b806781461010d578063bff28ea81461012d57600080fd5b8063066cc72e14610077578063067bc56d1461008c5780636af42ce1146100b4575b600080fd5b61008a610085366004610e2a565b61014d565b005b61009f61009a366004610f21565b61037a565b60405190151581526020015b60405180910390f35b6100c76100c2366004610f3a565b61038c565b6040516100ab929190610faa565b6100e86100e3366004610f21565b610609565b6040805161ffff948516815292841660208401529216918101919091526060016100ab565b61012061011b366004610f21565b6106ac565b6040516100ab9190611022565b61014061013b366004610f21565b610a7b565b6040516100ab9190611110565b61015860008b610b4e565b60008a8152600260208181526040909220600181018c90559081018a9055885190916101889183918b0190610cc8565b50865161019e90600383019060208a0190610cc8565b5085516101b49060048301906020890190610cc8565b5084516101ca9060058301906020880190610cc8565b504260068201556007810184905560088101805460ff198116825583919061ffff191661010083600381111561020257610202610f80565b0217905550828160080160026101000a81548161ffff021916908361ffff16021790555060018160080160046101000a81548161ffff021916908361ffff16021790555080600a0189908060018154018082558091505060019003906000526020600020016000909190919091505560018160090160008b815260200190815260200160002060006101000a81548160ff021916908315150217905550600181600b0160006101000a81548161ffff021916908361ffff160217905550600181600c0160008b815260200190815260200160002060006101000a81548160ff0219169083151502179055507fa163816913091132447c0758531d2ada4c725d9c8d508a966d0d1ce2604b2d87338c8a8a8a8a8a8860080160049054906101000a900461ffff1689600b0160009054906101000a900461ffff168c8b60080160019054906101000a900460ff166040516103659b9a99989796959493929190611154565b60405180910390a15050505050505050505050565b60006103868183610c78565b92915050565b6000806103998186610c78565b6104105760405162461bcd60e51b815260206004820152602c60248201527f43616e27742061646420746f20616e2050726f706f73616c207468617420646f60448201527f65736e27742065786973742e000000000000000000000000000000000000000060648201526084015b60405180910390fd5b600085815260026020908152604080832087845260098101909252822054909160ff9091161515900361057d57600881015461045990640100000000900461ffff166001611221565b60088201805461ffff929092166401000000000265ffff0000000019909216919091179055600a8101805460018181018355600092835260208084209092018a9055878352600984019091526040909120805460ff19169091179055831561057d57600b8101546104cf9061ffff166001611221565b600b8201805461ffff191661ffff929092169190911790556000858152600c820160205260408120805460ff19166001179055600882015460ff16600281111561051b5761051b610f80565b0361057d576008810154600b82015461ffff62010000909204821691161061057d5760088101805460ff19166001179081905560ff6101009091041692506003838181111561056c5761056c610f80565b0361057d5760039250806007015491505b60078101546008820154600b8301546040517ff55196be767918a729776a6778a9bd6812359991eb8f54883ea1d1bb9d2041d2936105f79333938c93889360038501936004860193600587019361ffff6401000000008404811693928116926201000081049091169160ff61010083048116921690611320565b60405180910390a15094509492505050565b600080806106178185610c78565b6106745760405162461bcd60e51b815260206004820152602860248201527f43616e27742067657420612050726f706f73616c207468617420646f65736e276044820152673a1032bc34b9ba1760c11b6064820152608401610407565b50505060009081526002602052604090206008810154600b9091015461ffff6401000000008304811693918116926201000090041690565b610709604080516101608101825260008082526020820181905291810182905260608082018190526080820181905260a0820181905260c082015260e0810182905261010081018290529061012082019081526020016000905290565b610714600083610c78565b6107715760405162461bcd60e51b815260206004820152602860248201527f43616e27742067657420612050726f706f73616c207468617420646f65736e276044820152673a1032bc34b9ba1760c11b6064820152608401610407565b6000828152600260208181526040928390206001810154918501919091529081015491830191909152805481906107a790611247565b80601f01602080910402602001604051908101604052809291908181526020018280546107d390611247565b80156108205780601f106107f557610100808354040283529160200191610820565b820191906000526020600020905b81548152906001019060200180831161080357829003601f168201915b5050505050826060018190525080600301805461083c90611247565b80601f016020809104026020016040519081016040528092919081815260200182805461086890611247565b80156108b55780601f1061088a576101008083540402835291602001916108b5565b820191906000526020600020905b81548152906001019060200180831161089857829003601f168201915b505050505082608001819052508060040180546108d190611247565b80601f01602080910402602001604051908101604052809291908181526020018280546108fd90611247565b801561094a5780601f1061091f5761010080835404028352916020019161094a565b820191906000526020600020905b81548152906001019060200180831161092d57829003601f168201915b50505050508260a0018190525080600501805461096690611247565b80601f016020809104026020016040519081016040528092919081815260200182805461099290611247565b80156109df5780601f106109b4576101008083540402835291602001916109df565b820191906000526020600020905b8154815290600101906020018083116109c257829003601f168201915b505050505060c0830152600781015460e08301526008810154640100000000810461ffff16610100808501919091526101208401910460ff166003811115610a2957610a29610f80565b90816003811115610a3c57610a3c610f80565b905250600881015461014083019060ff166002811115610a5e57610a5e610f80565b90816002811115610a7157610a71610f80565b8152505050919050565b6060610a88600083610c78565b610ae55760405162461bcd60e51b815260206004820152602860248201527f43616e27742067657420612050726f706f73616c207468617420646f65736e276044820152673a1032bc34b9ba1760c11b6064820152608401610407565b600082815260026020908152604091829020600a81018054845181850281018501909552808552919392909190830182828015610b4157602002820191906000526020600020905b815481526020019060010190808311610b2d575b5050505050915050919050565b6000819003610bc55760405162461bcd60e51b815260206004820152602860248201527f556e6f7264657265644b65795365742831303029202d204b65792063616e6e6f60448201527f74206265203078300000000000000000000000000000000000000000000000006064820152608401610407565b610bcf8282610c78565b15610c425760405162461bcd60e51b815260206004820152603560248201527f556e6f7264657265644b65795365742831303129202d204b657920616c72656160448201527f64792065786973747320696e20746865207365742e00000000000000000000006064820152608401610407565b6001808301805480830182556000828152602090200183905554610c6691906113ee565b60009182526020929092526040902055565b60018201546000908103610c8e57506000610386565b6000828152602084905260409020546001840180548492908110610cb457610cb4611405565b906000526020600020015414905092915050565b828054610cd490611247565b90600052602060002090601f016020900481019282610cf65760008555610d3c565b82601f10610d0f57805160ff1916838001178555610d3c565b82800160010185558215610d3c579182015b82811115610d3c578251825591602001919060010190610d21565b50610d48929150610d4c565b5090565b5b80821115610d485760008155600101610d4d565b634e487b7160e01b600052604160045260246000fd5b600082601f830112610d8857600080fd5b813567ffffffffffffffff80821115610da357610da3610d61565b604051601f8301601f19908116603f01168101908282118183101715610dcb57610dcb610d61565b81604052838152866020858801011115610de457600080fd5b836020870160208301376000602085830101528094505050505092915050565b803561ffff81168114610e1657600080fd5b919050565b803560048110610e1657600080fd5b6000806000806000806000806000806101408b8d031215610e4a57600080fd5b8a35995060208b0135985060408b0135975060608b013567ffffffffffffffff80821115610e7757600080fd5b610e838e838f01610d77565b985060808d0135915080821115610e9957600080fd5b610ea58e838f01610d77565b975060a08d0135915080821115610ebb57600080fd5b610ec78e838f01610d77565b965060c08d0135915080821115610edd57600080fd5b50610eea8d828e01610d77565b94505060e08b01359250610f016101008c01610e04565b9150610f106101208c01610e1b565b90509295989b9194979a5092959850565b600060208284031215610f3357600080fd5b5035919050565b60008060008060808587031215610f5057600080fd5b84359350602085013592506040850135915060608501358015158114610f7557600080fd5b939692955090935050565b634e487b7160e01b600052602160045260246000fd5b60048110610fa657610fa6610f80565b9052565b60408101610fb88285610f96565b8260208301529392505050565b6000815180845260005b81811015610feb57602081850181015186830182015201610fcf565b81811115610ffd576000602083870101525b50601f01601f19169290920160200192915050565b60038110610fa657610fa6610f80565b602081528151602082015260208201516040820152604082015160608201526000606083015161016080608085015261105f610180850183610fc5565b91506080850151601f19808685030160a087015261107d8483610fc5565b935060a08701519150808685030160c087015261109a8483610fc5565b935060c08701519150808685030160e0870152506110b88382610fc5565b92505060e08501516101008181870152808701519150506101206110e18187018361ffff169052565b86015190506101406110f586820183610f96565b860151905061110685830182611012565b5090949350505050565b6020808252825182820181905260009190848201906040850190845b818110156111485783518352928401929184019160010161112c565b50909695505050505050565b600061016073ffffffffffffffffffffffffffffffffffffffff8e1683528c602084015280604084015261118a8184018d610fc5565b9050828103606084015261119e818c610fc5565b905082810360808401526111b2818b610fc5565b905082810360a08401526111c6818a610fc5565b9150508660c083015261ffff80871660e0840152808616610100840152808516610120840152506111fb610140830184610f96565b9c9b505050505050505050505050565b634e487b7160e01b600052601160045260246000fd5b600061ffff80831681851680830382111561123e5761123e61120b565b01949350505050565b600181811c9082168061125b57607f821691505b60208210810361127b57634e487b7160e01b600052602260045260246000fd5b50919050565b8054600090600181811c908083168061129b57607f831692505b602080841082036112bc57634e487b7160e01b600052602260045260246000fd5b838852602088018280156112d757600181146112e857611313565b60ff19871682528282019750611313565b60008981526020902060005b8781101561130d578154848201529086019084016112f4565b83019850505b5050505050505092915050565b600061018073ffffffffffffffffffffffffffffffffffffffff8f1683528d60208401528060408401526113568184018e611281565b9050828103606084015261136a818d611281565b9050828103608084015261137e818c611281565b905082810360a0840152611392818b611281565b9150508760c083015261ffff871660e08301526113b661010083018761ffff169052565b61ffff85166101208301526113cf610140830185610f96565b6113dd610160830184611012565b9d9c50505050505050505050505050565b6000828210156114005761140061120b565b500390565b634e487b7160e01b600052603260045260246000fdfea164736f6c634300080d000a";

type Cakery_Rep_ProposalsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: Cakery_Rep_ProposalsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Cakery_Rep_Proposals__factory extends ContractFactory {
  constructor(...args: Cakery_Rep_ProposalsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Cakery_Rep_Proposals> {
    return super.deploy(overrides || {}) as Promise<Cakery_Rep_Proposals>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Cakery_Rep_Proposals {
    return super.attach(address) as Cakery_Rep_Proposals;
  }
  override connect(signer: Signer): Cakery_Rep_Proposals__factory {
    return super.connect(signer) as Cakery_Rep_Proposals__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): Cakery_Rep_ProposalsInterface {
    return new utils.Interface(_abi) as Cakery_Rep_ProposalsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Cakery_Rep_Proposals {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as Cakery_Rep_Proposals;
  }
}
